type User {
  userId: ID!
  name: String!
  notes: [Note!]!
  tasks: [Task!]!
}

type Note {
  noteId: ID!
  userId: ID!
  title: String!
  content: String!
  createdAt: String!
}

type Task {
  taskId: ID!
  userId: ID!
  title: String!
  description: String!
  dueDate: String!
  status: String!
  createdAt: String!
}

type Query {
  users: [User!]!
  user(userId: ID!): User

  notes(userId: ID!): [Note!]!
  note(noteId: ID!): Note

  tasks(userId: ID!): [Note!]!
  task(taskId: ID!): Task
}

type Mutation {
    createUser(name: String!): User!
    updateUser(userId: ID!, name: String): User!
    deleteUser(userId: ID!): Boolean!

    createNote(userId: ID!, title: String!, content: String!): Note!
    updateNote(noteId: ID!, title: String, content: String): Note!
    deleteNote(noteId: ID!): Boolean!

    createTask(userId: ID!, title: String!, description: String, dueDate: String): Task!
    updateTask(taskId: ID!, title: String, description: String, dueDate: String, status: String): Task!
    deleteTask(taskId: ID!): Boolean!
}